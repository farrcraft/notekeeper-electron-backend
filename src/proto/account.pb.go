// Code generated by protoc-gen-go.
// source: account.proto
// DO NOT EDIT!

/*
Package notekeeper is a generated protocol buffer package.

It is generated from these files:
	account.proto
	common.proto
	db.proto
	kex.proto
	note.proto
	notebook.proto
	rpc.proto
	ui_state.proto
	workspace.proto

It has these top-level messages:
	AccountStateResponse
	CreateAccountRequest
	UnlockAccountRequest
	SigninAccountRequest
	RequestHeader
	ResponseHeader
	OpenMasterDbRequest
	KeyExchangeRequest
	KeyExchangeResponse
	CreateNotebookRequest
	EmptyRequest
	EmptyResponse
	IdRequest
	IdResponse
	LoadUIStateResponse
	SaveUIStateRequest
*/
package notekeeper

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type AccountStateResponse struct {
	Header   *ResponseHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	SignedIn bool            `protobuf:"varint,2,opt,name=signedIn" json:"signedIn,omitempty"`
	Locked   bool            `protobuf:"varint,3,opt,name=locked" json:"locked,omitempty"`
	Exists   bool            `protobuf:"varint,4,opt,name=exists" json:"exists,omitempty"`
}

func (m *AccountStateResponse) Reset()                    { *m = AccountStateResponse{} }
func (m *AccountStateResponse) String() string            { return proto.CompactTextString(m) }
func (*AccountStateResponse) ProtoMessage()               {}
func (*AccountStateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *AccountStateResponse) GetHeader() *ResponseHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *AccountStateResponse) GetSignedIn() bool {
	if m != nil {
		return m.SignedIn
	}
	return false
}

func (m *AccountStateResponse) GetLocked() bool {
	if m != nil {
		return m.Locked
	}
	return false
}

func (m *AccountStateResponse) GetExists() bool {
	if m != nil {
		return m.Exists
	}
	return false
}

type CreateAccountRequest struct {
	Header     *RequestHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Name       string         `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Email      string         `protobuf:"bytes,3,opt,name=email" json:"email,omitempty"`
	Passphrase string         `protobuf:"bytes,4,opt,name=passphrase" json:"passphrase,omitempty"`
}

func (m *CreateAccountRequest) Reset()                    { *m = CreateAccountRequest{} }
func (m *CreateAccountRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateAccountRequest) ProtoMessage()               {}
func (*CreateAccountRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *CreateAccountRequest) GetHeader() *RequestHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *CreateAccountRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateAccountRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *CreateAccountRequest) GetPassphrase() string {
	if m != nil {
		return m.Passphrase
	}
	return ""
}

type UnlockAccountRequest struct {
	Header     *RequestHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Id         string         `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	Passphrase string         `protobuf:"bytes,3,opt,name=passphrase" json:"passphrase,omitempty"`
}

func (m *UnlockAccountRequest) Reset()                    { *m = UnlockAccountRequest{} }
func (m *UnlockAccountRequest) String() string            { return proto.CompactTextString(m) }
func (*UnlockAccountRequest) ProtoMessage()               {}
func (*UnlockAccountRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *UnlockAccountRequest) GetHeader() *RequestHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *UnlockAccountRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UnlockAccountRequest) GetPassphrase() string {
	if m != nil {
		return m.Passphrase
	}
	return ""
}

type SigninAccountRequest struct {
	Header     *RequestHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Name       string         `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Email      string         `protobuf:"bytes,3,opt,name=email" json:"email,omitempty"`
	Passphrase string         `protobuf:"bytes,4,opt,name=passphrase" json:"passphrase,omitempty"`
}

func (m *SigninAccountRequest) Reset()                    { *m = SigninAccountRequest{} }
func (m *SigninAccountRequest) String() string            { return proto.CompactTextString(m) }
func (*SigninAccountRequest) ProtoMessage()               {}
func (*SigninAccountRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *SigninAccountRequest) GetHeader() *RequestHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *SigninAccountRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SigninAccountRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *SigninAccountRequest) GetPassphrase() string {
	if m != nil {
		return m.Passphrase
	}
	return ""
}

func init() {
	proto.RegisterType((*AccountStateResponse)(nil), "notekeeper.AccountStateResponse")
	proto.RegisterType((*CreateAccountRequest)(nil), "notekeeper.CreateAccountRequest")
	proto.RegisterType((*UnlockAccountRequest)(nil), "notekeeper.UnlockAccountRequest")
	proto.RegisterType((*SigninAccountRequest)(nil), "notekeeper.SigninAccountRequest")
}

func init() { proto.RegisterFile("account.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 272 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x92, 0x4b, 0x4e, 0xc3, 0x30,
	0x10, 0x86, 0xe5, 0xb6, 0x44, 0xcd, 0xf0, 0x58, 0x58, 0x11, 0x0a, 0x59, 0xa0, 0x2a, 0xab, 0xae,
	0x22, 0x51, 0x4e, 0x80, 0xd8, 0xc0, 0xd6, 0x15, 0x07, 0x30, 0xf1, 0xa8, 0xb5, 0xda, 0x8c, 0x8d,
	0xed, 0x4a, 0x70, 0x0e, 0x24, 0xce, 0x8b, 0x62, 0x87, 0x57, 0x58, 0xb2, 0x61, 0x97, 0xff, 0x9f,
	0x4f, 0x99, 0x4f, 0x23, 0xc3, 0xa9, 0x6c, 0x5b, 0x73, 0xa0, 0xd0, 0x58, 0x67, 0x82, 0xe1, 0x40,
	0x26, 0xe0, 0x0e, 0xd1, 0xa2, 0xab, 0x4e, 0x5a, 0xd3, 0x75, 0x86, 0xd2, 0xa4, 0x7e, 0x63, 0x50,
	0xdc, 0x24, 0x76, 0x1d, 0x64, 0x40, 0x81, 0xde, 0x1a, 0xf2, 0xc8, 0x57, 0x90, 0x6d, 0x51, 0x2a,
	0x74, 0x25, 0x5b, 0xb0, 0xe5, 0xf1, 0xaa, 0x6a, 0xbe, 0xfe, 0xd1, 0x7c, 0x50, 0x77, 0x91, 0x10,
	0x03, 0xc9, 0x2b, 0x98, 0x7b, 0xbd, 0x21, 0x54, 0xf7, 0x54, 0x4e, 0x16, 0x6c, 0x39, 0x17, 0x9f,
	0x99, 0x9f, 0x43, 0xb6, 0x37, 0xed, 0x0e, 0x55, 0x39, 0x8d, 0x93, 0x21, 0xf5, 0x3d, 0x3e, 0x6b,
	0x1f, 0x7c, 0x39, 0x4b, 0x7d, 0x4a, 0xf5, 0x2b, 0x83, 0xe2, 0xd6, 0xa1, 0x0c, 0x38, 0xe8, 0x09,
	0x7c, 0x3a, 0xa0, 0x0f, 0xfc, 0x6a, 0x24, 0x76, 0xf1, 0x53, 0x2c, 0x42, 0x23, 0x2f, 0x0e, 0x33,
	0x92, 0x1d, 0x46, 0xa7, 0x5c, 0xc4, 0x6f, 0x5e, 0xc0, 0x11, 0x76, 0x52, 0xef, 0xa3, 0x4e, 0x2e,
	0x52, 0xe0, 0x97, 0x00, 0x56, 0x7a, 0x6f, 0xb7, 0x4e, 0x7a, 0x8c, 0x46, 0xb9, 0xf8, 0xd6, 0xd4,
	0x2f, 0x50, 0x3c, 0x50, 0x6f, 0xfe, 0x77, 0xa9, 0x33, 0x98, 0x68, 0x35, 0x28, 0x4d, 0xb4, 0x1a,
	0xad, 0x9e, 0xfe, 0x5a, 0xdd, 0x1f, 0x64, 0xad, 0x37, 0xa4, 0xe9, 0x1f, 0x1d, 0xe4, 0x31, 0x8b,
	0xcf, 0xe8, 0xfa, 0x3d, 0x00, 0x00, 0xff, 0xff, 0x40, 0x4a, 0xda, 0xb4, 0x71, 0x02, 0x00, 0x00,
}
