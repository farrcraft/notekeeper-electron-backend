// Code generated by protoc-gen-go.
// source: shelf.proto
// DO NOT EDIT!

package notekeeper

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Ignoring public import of RequestHeader from common.proto

// Ignoring public import of ResponseHeader from common.proto

// Ignoring public import of Title from title.proto

type Shelf struct {
	Id      string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name    *Title `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Scope   string `protobuf:"bytes,3,opt,name=scope" json:"scope,omitempty"`
	Default bool   `protobuf:"varint,4,opt,name=default" json:"default,omitempty"`
	Trash   bool   `protobuf:"varint,5,opt,name=trash" json:"trash,omitempty"`
	Locked  bool   `protobuf:"varint,6,opt,name=locked" json:"locked,omitempty"`
	Created string `protobuf:"bytes,7,opt,name=created" json:"created,omitempty"`
	Updated string `protobuf:"bytes,8,opt,name=updated" json:"updated,omitempty"`
}

func (m *Shelf) Reset()                    { *m = Shelf{} }
func (m *Shelf) String() string            { return proto.CompactTextString(m) }
func (*Shelf) ProtoMessage()               {}
func (*Shelf) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{0} }

func (m *Shelf) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Shelf) GetName() *Title {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *Shelf) GetScope() string {
	if m != nil {
		return m.Scope
	}
	return ""
}

func (m *Shelf) GetDefault() bool {
	if m != nil {
		return m.Default
	}
	return false
}

func (m *Shelf) GetTrash() bool {
	if m != nil {
		return m.Trash
	}
	return false
}

func (m *Shelf) GetLocked() bool {
	if m != nil {
		return m.Locked
	}
	return false
}

func (m *Shelf) GetCreated() string {
	if m != nil {
		return m.Created
	}
	return ""
}

func (m *Shelf) GetUpdated() string {
	if m != nil {
		return m.Updated
	}
	return ""
}

type GetShelvesRequest struct {
	Header *RequestHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Id     string         `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	Scope  string         `protobuf:"bytes,3,opt,name=scope" json:"scope,omitempty"`
}

func (m *GetShelvesRequest) Reset()                    { *m = GetShelvesRequest{} }
func (m *GetShelvesRequest) String() string            { return proto.CompactTextString(m) }
func (*GetShelvesRequest) ProtoMessage()               {}
func (*GetShelvesRequest) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{1} }

func (m *GetShelvesRequest) GetHeader() *RequestHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *GetShelvesRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *GetShelvesRequest) GetScope() string {
	if m != nil {
		return m.Scope
	}
	return ""
}

type GetShelvesResponse struct {
	Header  *ResponseHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Shelves []*Shelf        `protobuf:"bytes,2,rep,name=shelves" json:"shelves,omitempty"`
}

func (m *GetShelvesResponse) Reset()                    { *m = GetShelvesResponse{} }
func (m *GetShelvesResponse) String() string            { return proto.CompactTextString(m) }
func (*GetShelvesResponse) ProtoMessage()               {}
func (*GetShelvesResponse) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{2} }

func (m *GetShelvesResponse) GetHeader() *ResponseHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *GetShelvesResponse) GetShelves() []*Shelf {
	if m != nil {
		return m.Shelves
	}
	return nil
}

type CreateShelfRequest struct {
	Header *RequestHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Name   *Title         `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Scope  string         `protobuf:"bytes,3,opt,name=scope" json:"scope,omitempty"`
}

func (m *CreateShelfRequest) Reset()                    { *m = CreateShelfRequest{} }
func (m *CreateShelfRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateShelfRequest) ProtoMessage()               {}
func (*CreateShelfRequest) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{3} }

func (m *CreateShelfRequest) GetHeader() *RequestHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *CreateShelfRequest) GetName() *Title {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *CreateShelfRequest) GetScope() string {
	if m != nil {
		return m.Scope
	}
	return ""
}

type SaveShelfRequest struct {
	Header *RequestHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Id     string         `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	Title  *Title         `protobuf:"bytes,3,opt,name=title" json:"title,omitempty"`
	Locked bool           `protobuf:"varint,4,opt,name=locked" json:"locked,omitempty"`
}

func (m *SaveShelfRequest) Reset()                    { *m = SaveShelfRequest{} }
func (m *SaveShelfRequest) String() string            { return proto.CompactTextString(m) }
func (*SaveShelfRequest) ProtoMessage()               {}
func (*SaveShelfRequest) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{4} }

func (m *SaveShelfRequest) GetHeader() *RequestHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *SaveShelfRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *SaveShelfRequest) GetTitle() *Title {
	if m != nil {
		return m.Title
	}
	return nil
}

func (m *SaveShelfRequest) GetLocked() bool {
	if m != nil {
		return m.Locked
	}
	return false
}

type DeleteShelfRequest struct {
	Header *RequestHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Id     string         `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	Scope  string         `protobuf:"bytes,3,opt,name=scope" json:"scope,omitempty"`
}

func (m *DeleteShelfRequest) Reset()                    { *m = DeleteShelfRequest{} }
func (m *DeleteShelfRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteShelfRequest) ProtoMessage()               {}
func (*DeleteShelfRequest) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{5} }

func (m *DeleteShelfRequest) GetHeader() *RequestHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *DeleteShelfRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *DeleteShelfRequest) GetScope() string {
	if m != nil {
		return m.Scope
	}
	return ""
}

func init() {
	proto.RegisterType((*Shelf)(nil), "notekeeper.Shelf")
	proto.RegisterType((*GetShelvesRequest)(nil), "notekeeper.GetShelvesRequest")
	proto.RegisterType((*GetShelvesResponse)(nil), "notekeeper.GetShelvesResponse")
	proto.RegisterType((*CreateShelfRequest)(nil), "notekeeper.CreateShelfRequest")
	proto.RegisterType((*SaveShelfRequest)(nil), "notekeeper.SaveShelfRequest")
	proto.RegisterType((*DeleteShelfRequest)(nil), "notekeeper.DeleteShelfRequest")
}

func init() { proto.RegisterFile("shelf.proto", fileDescriptor8) }

var fileDescriptor8 = []byte{
	// 350 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x53, 0x51, 0x4e, 0xeb, 0x30,
	0x10, 0x7c, 0x4e, 0x9b, 0xb4, 0x6f, 0x83, 0x10, 0xb5, 0x10, 0x32, 0xfd, 0x8a, 0x22, 0x21, 0x2a,
	0x21, 0x55, 0xa2, 0x1c, 0x01, 0x24, 0xf8, 0xac, 0x52, 0x2e, 0x10, 0xe2, 0xad, 0x5a, 0x35, 0x89,
	0x43, 0xec, 0xf4, 0x04, 0x9c, 0x81, 0x73, 0x71, 0x24, 0x94, 0x75, 0x0a, 0x21, 0xca, 0x17, 0xe5,
	0x73, 0x3c, 0xe3, 0xdd, 0x9d, 0xf1, 0x1a, 0x7c, 0xbd, 0xc1, 0x74, 0x3d, 0x2f, 0x4a, 0x65, 0x14,
	0x87, 0x5c, 0x19, 0xdc, 0x21, 0x16, 0x58, 0x4e, 0x4f, 0x12, 0x95, 0x65, 0x2a, 0xb7, 0xcc, 0xd4,
	0x37, 0x5b, 0x93, 0xa2, 0x05, 0xe1, 0x07, 0x03, 0x77, 0x55, 0x5f, 0xe3, 0xa7, 0xe0, 0x6c, 0xa5,
	0x60, 0x01, 0x9b, 0xfd, 0x8f, 0x9c, 0xad, 0xe4, 0x57, 0x30, 0xcc, 0xe3, 0x0c, 0x85, 0x13, 0xb0,
	0x99, 0xbf, 0x98, 0xcc, 0xbf, 0xeb, 0xcd, 0x9f, 0xeb, 0x02, 0x11, 0xd1, 0xfc, 0x1c, 0x5c, 0x9d,
	0xa8, 0x02, 0xc5, 0x80, 0x6e, 0x5a, 0xc0, 0x05, 0x8c, 0x24, 0xae, 0xe3, 0x2a, 0x35, 0x62, 0x18,
	0xb0, 0xd9, 0x38, 0x3a, 0xc0, 0x5a, 0x6f, 0xca, 0x58, 0x6f, 0x84, 0x4b, 0xe7, 0x16, 0xf0, 0x0b,
	0xf0, 0x52, 0x95, 0xec, 0x50, 0x0a, 0x8f, 0x8e, 0x1b, 0x54, 0xd7, 0x49, 0x4a, 0x8c, 0x0d, 0x4a,
	0x31, 0xa2, 0xfa, 0x07, 0x58, 0x33, 0x55, 0x21, 0x89, 0x19, 0x5b, 0xa6, 0x81, 0x61, 0x0a, 0x93,
	0x47, 0x34, 0xb5, 0xa9, 0x3d, 0xea, 0x08, 0x5f, 0x2b, 0xd4, 0x86, 0xdf, 0x82, 0xb7, 0xc1, 0x58,
	0x62, 0x49, 0x0e, 0xfd, 0xc5, 0x65, 0xdb, 0x4f, 0x23, 0x7a, 0x22, 0x41, 0xd4, 0x08, 0x9b, 0x40,
	0x9c, 0xaf, 0x40, 0x7a, 0x9d, 0x86, 0x15, 0xf0, 0x76, 0x37, 0x5d, 0xa8, 0x5c, 0x23, 0x5f, 0x74,
	0xda, 0x4d, 0x7f, 0xb6, 0xb3, 0xaa, 0x4e, 0xbf, 0x1b, 0x18, 0x69, 0x5b, 0x46, 0x38, 0xc1, 0xa0,
	0x9b, 0x39, 0x3d, 0x52, 0x74, 0x50, 0x84, 0x6f, 0x0c, 0xf8, 0x3d, 0x45, 0x61, 0x89, 0xdf, 0xdb,
	0x3c, 0xe6, 0x9d, 0xc3, 0x77, 0x06, 0x67, 0xab, 0x78, 0x7f, 0xf4, 0x10, 0xdd, 0xac, 0xaf, 0xc1,
	0xa5, 0x2d, 0xa5, 0x6e, 0xbd, 0x53, 0x59, 0xbe, 0xb5, 0x38, 0xc3, 0xf6, 0xe2, 0x84, 0x19, 0xf0,
	0x07, 0x4c, 0xd1, 0xfc, 0xf9, 0x64, 0xbd, 0x39, 0x2c, 0xff, 0x2d, 0xd9, 0x8b, 0x47, 0x3f, 0xea,
	0xee, 0x33, 0x00, 0x00, 0xff, 0xff, 0xf5, 0x14, 0xaa, 0xc2, 0x87, 0x03, 0x00, 0x00,
}
