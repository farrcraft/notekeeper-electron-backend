// Code generated by protoc-gen-go.
// source: notebook.proto
// DO NOT EDIT!

package notekeeper

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Ignoring public import of RequestHeader from common.proto

// Ignoring public import of ResponseHeader from common.proto

// Ignoring public import of Title from title.proto

type Notebook struct {
	Id          string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name        *Title `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Scope       string `protobuf:"bytes,3,opt,name=scope" json:"scope,omitempty"`
	Container   string `protobuf:"bytes,4,opt,name=container" json:"container,omitempty"`
	OwnerId     string `protobuf:"bytes,5,opt,name=ownerId" json:"ownerId,omitempty"`
	ContainerId string `protobuf:"bytes,6,opt,name=containerId" json:"containerId,omitempty"`
	Default     bool   `protobuf:"varint,7,opt,name=default" json:"default,omitempty"`
	Locked      bool   `protobuf:"varint,8,opt,name=locked" json:"locked,omitempty"`
	NoteCount   int32  `protobuf:"varint,9,opt,name=noteCount" json:"noteCount,omitempty"`
	Created     string `protobuf:"bytes,10,opt,name=created" json:"created,omitempty"`
	Updated     string `protobuf:"bytes,11,opt,name=updated" json:"updated,omitempty"`
}

func (m *Notebook) Reset()                    { *m = Notebook{} }
func (m *Notebook) String() string            { return proto.CompactTextString(m) }
func (*Notebook) ProtoMessage()               {}
func (*Notebook) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{0} }

func (m *Notebook) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Notebook) GetName() *Title {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *Notebook) GetScope() string {
	if m != nil {
		return m.Scope
	}
	return ""
}

func (m *Notebook) GetContainer() string {
	if m != nil {
		return m.Container
	}
	return ""
}

func (m *Notebook) GetOwnerId() string {
	if m != nil {
		return m.OwnerId
	}
	return ""
}

func (m *Notebook) GetContainerId() string {
	if m != nil {
		return m.ContainerId
	}
	return ""
}

func (m *Notebook) GetDefault() bool {
	if m != nil {
		return m.Default
	}
	return false
}

func (m *Notebook) GetLocked() bool {
	if m != nil {
		return m.Locked
	}
	return false
}

func (m *Notebook) GetNoteCount() int32 {
	if m != nil {
		return m.NoteCount
	}
	return 0
}

func (m *Notebook) GetCreated() string {
	if m != nil {
		return m.Created
	}
	return ""
}

func (m *Notebook) GetUpdated() string {
	if m != nil {
		return m.Updated
	}
	return ""
}

type CreateNotebookRequest struct {
	Header      *RequestHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Name        *Title         `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Scope       string         `protobuf:"bytes,3,opt,name=scope" json:"scope,omitempty"`
	Container   string         `protobuf:"bytes,4,opt,name=container" json:"container,omitempty"`
	OwnerId     string         `protobuf:"bytes,5,opt,name=ownerId" json:"ownerId,omitempty"`
	ContainerId string         `protobuf:"bytes,6,opt,name=containerId" json:"containerId,omitempty"`
}

func (m *CreateNotebookRequest) Reset()                    { *m = CreateNotebookRequest{} }
func (m *CreateNotebookRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateNotebookRequest) ProtoMessage()               {}
func (*CreateNotebookRequest) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{1} }

func (m *CreateNotebookRequest) GetHeader() *RequestHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *CreateNotebookRequest) GetName() *Title {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *CreateNotebookRequest) GetScope() string {
	if m != nil {
		return m.Scope
	}
	return ""
}

func (m *CreateNotebookRequest) GetContainer() string {
	if m != nil {
		return m.Container
	}
	return ""
}

func (m *CreateNotebookRequest) GetOwnerId() string {
	if m != nil {
		return m.OwnerId
	}
	return ""
}

func (m *CreateNotebookRequest) GetContainerId() string {
	if m != nil {
		return m.ContainerId
	}
	return ""
}

type SaveNotebookRequest struct {
	Header      *RequestHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Id          string         `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	Name        *Title         `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Scope       string         `protobuf:"bytes,4,opt,name=scope" json:"scope,omitempty"`
	Container   string         `protobuf:"bytes,5,opt,name=container" json:"container,omitempty"`
	OwnerId     string         `protobuf:"bytes,6,opt,name=ownerId" json:"ownerId,omitempty"`
	ContainerId string         `protobuf:"bytes,7,opt,name=containerId" json:"containerId,omitempty"`
	Default     bool           `protobuf:"varint,8,opt,name=default" json:"default,omitempty"`
	Locked      bool           `protobuf:"varint,9,opt,name=locked" json:"locked,omitempty"`
}

func (m *SaveNotebookRequest) Reset()                    { *m = SaveNotebookRequest{} }
func (m *SaveNotebookRequest) String() string            { return proto.CompactTextString(m) }
func (*SaveNotebookRequest) ProtoMessage()               {}
func (*SaveNotebookRequest) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{2} }

func (m *SaveNotebookRequest) GetHeader() *RequestHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *SaveNotebookRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *SaveNotebookRequest) GetName() *Title {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *SaveNotebookRequest) GetScope() string {
	if m != nil {
		return m.Scope
	}
	return ""
}

func (m *SaveNotebookRequest) GetContainer() string {
	if m != nil {
		return m.Container
	}
	return ""
}

func (m *SaveNotebookRequest) GetOwnerId() string {
	if m != nil {
		return m.OwnerId
	}
	return ""
}

func (m *SaveNotebookRequest) GetContainerId() string {
	if m != nil {
		return m.ContainerId
	}
	return ""
}

func (m *SaveNotebookRequest) GetDefault() bool {
	if m != nil {
		return m.Default
	}
	return false
}

func (m *SaveNotebookRequest) GetLocked() bool {
	if m != nil {
		return m.Locked
	}
	return false
}

type GetNotebooksRequest struct {
	Header      *RequestHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Scope       string         `protobuf:"bytes,2,opt,name=scope" json:"scope,omitempty"`
	Container   string         `protobuf:"bytes,3,opt,name=container" json:"container,omitempty"`
	OwnerId     string         `protobuf:"bytes,4,opt,name=ownerId" json:"ownerId,omitempty"`
	ContainerId string         `protobuf:"bytes,5,opt,name=containerId" json:"containerId,omitempty"`
}

func (m *GetNotebooksRequest) Reset()                    { *m = GetNotebooksRequest{} }
func (m *GetNotebooksRequest) String() string            { return proto.CompactTextString(m) }
func (*GetNotebooksRequest) ProtoMessage()               {}
func (*GetNotebooksRequest) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{3} }

func (m *GetNotebooksRequest) GetHeader() *RequestHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *GetNotebooksRequest) GetScope() string {
	if m != nil {
		return m.Scope
	}
	return ""
}

func (m *GetNotebooksRequest) GetContainer() string {
	if m != nil {
		return m.Container
	}
	return ""
}

func (m *GetNotebooksRequest) GetOwnerId() string {
	if m != nil {
		return m.OwnerId
	}
	return ""
}

func (m *GetNotebooksRequest) GetContainerId() string {
	if m != nil {
		return m.ContainerId
	}
	return ""
}

type GetNotebooksResponse struct {
	Header    *ResponseHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Notebooks []*Notebook     `protobuf:"bytes,2,rep,name=notebooks" json:"notebooks,omitempty"`
}

func (m *GetNotebooksResponse) Reset()                    { *m = GetNotebooksResponse{} }
func (m *GetNotebooksResponse) String() string            { return proto.CompactTextString(m) }
func (*GetNotebooksResponse) ProtoMessage()               {}
func (*GetNotebooksResponse) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{4} }

func (m *GetNotebooksResponse) GetHeader() *ResponseHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *GetNotebooksResponse) GetNotebooks() []*Notebook {
	if m != nil {
		return m.Notebooks
	}
	return nil
}

type DeleteNotebookRequest struct {
	Header      *RequestHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Id          string         `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	Scope       string         `protobuf:"bytes,3,opt,name=scope" json:"scope,omitempty"`
	Container   string         `protobuf:"bytes,4,opt,name=container" json:"container,omitempty"`
	OwnerId     string         `protobuf:"bytes,5,opt,name=ownerId" json:"ownerId,omitempty"`
	ContainerId string         `protobuf:"bytes,6,opt,name=containerId" json:"containerId,omitempty"`
}

func (m *DeleteNotebookRequest) Reset()                    { *m = DeleteNotebookRequest{} }
func (m *DeleteNotebookRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteNotebookRequest) ProtoMessage()               {}
func (*DeleteNotebookRequest) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{5} }

func (m *DeleteNotebookRequest) GetHeader() *RequestHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *DeleteNotebookRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *DeleteNotebookRequest) GetScope() string {
	if m != nil {
		return m.Scope
	}
	return ""
}

func (m *DeleteNotebookRequest) GetContainer() string {
	if m != nil {
		return m.Container
	}
	return ""
}

func (m *DeleteNotebookRequest) GetOwnerId() string {
	if m != nil {
		return m.OwnerId
	}
	return ""
}

func (m *DeleteNotebookRequest) GetContainerId() string {
	if m != nil {
		return m.ContainerId
	}
	return ""
}

func init() {
	proto.RegisterType((*Notebook)(nil), "notekeeper.Notebook")
	proto.RegisterType((*CreateNotebookRequest)(nil), "notekeeper.CreateNotebookRequest")
	proto.RegisterType((*SaveNotebookRequest)(nil), "notekeeper.SaveNotebookRequest")
	proto.RegisterType((*GetNotebooksRequest)(nil), "notekeeper.GetNotebooksRequest")
	proto.RegisterType((*GetNotebooksResponse)(nil), "notekeeper.GetNotebooksResponse")
	proto.RegisterType((*DeleteNotebookRequest)(nil), "notekeeper.DeleteNotebookRequest")
}

func init() { proto.RegisterFile("notebook.proto", fileDescriptor6) }

var fileDescriptor6 = []byte{
	// 428 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x54, 0xdd, 0x8a, 0xd3, 0x40,
	0x18, 0x75, 0xa6, 0x4d, 0x9a, 0x7c, 0x91, 0x05, 0x67, 0xbb, 0x32, 0x16, 0x2f, 0x42, 0x40, 0xc8,
	0x55, 0xc1, 0xf8, 0x08, 0x2b, 0xe8, 0xde, 0xc8, 0x12, 0x7d, 0x81, 0x6c, 0xe6, 0x13, 0x43, 0xd3,
	0x99, 0x98, 0x4c, 0xf4, 0xce, 0x77, 0xf1, 0x21, 0x04, 0x9f, 0xc1, 0xb7, 0xf0, 0x4d, 0x24, 0x33,
	0x49, 0x93, 0xdd, 0xd2, 0x20, 0xf8, 0xc3, 0x5e, 0x9e, 0x39, 0xe7, 0xfb, 0x38, 0xe7, 0xeb, 0x49,
	0xe1, 0x4c, 0x2a, 0x8d, 0x37, 0x4a, 0xed, 0xb6, 0x55, 0xad, 0xb4, 0x62, 0xd0, 0xe1, 0x1d, 0x62,
	0x85, 0xf5, 0xe6, 0x61, 0xae, 0xf6, 0x7b, 0x25, 0x2d, 0xb3, 0x09, 0x74, 0xa1, 0x4b, 0xb4, 0x20,
	0xfa, 0x46, 0xc1, 0x7b, 0xd3, 0x4f, 0xb2, 0x33, 0xa0, 0x85, 0xe0, 0x24, 0x24, 0xb1, 0x9f, 0xd2,
	0x42, 0xb0, 0x67, 0xb0, 0x94, 0xd9, 0x1e, 0x39, 0x0d, 0x49, 0x1c, 0x24, 0x8f, 0xb6, 0xe3, 0xca,
	0xed, 0xbb, 0x6e, 0x47, 0x6a, 0x68, 0xb6, 0x06, 0xa7, 0xc9, 0x55, 0x85, 0x7c, 0x61, 0x26, 0x2d,
	0x60, 0x4f, 0xc1, 0xcf, 0x95, 0xd4, 0x59, 0x21, 0xb1, 0xe6, 0x4b, 0xc3, 0x8c, 0x0f, 0x8c, 0xc3,
	0x4a, 0x7d, 0x96, 0x58, 0x5f, 0x09, 0xee, 0x18, 0x6e, 0x80, 0x2c, 0x84, 0xe0, 0x20, 0xbb, 0x12,
	0xdc, 0x35, 0xec, 0xf4, 0xa9, 0x9b, 0x15, 0xf8, 0x3e, 0x6b, 0x4b, 0xcd, 0x57, 0x21, 0x89, 0xbd,
	0x74, 0x80, 0xec, 0x31, 0xb8, 0xa5, 0xca, 0x77, 0x28, 0xb8, 0x67, 0x88, 0x1e, 0x75, 0x5e, 0x3a,
	0xef, 0x97, 0xaa, 0x95, 0x9a, 0xfb, 0x21, 0x89, 0x9d, 0x74, 0x7c, 0xe8, 0xf6, 0xe5, 0x35, 0x66,
	0x1a, 0x05, 0x07, 0xeb, 0xa5, 0x87, 0x1d, 0xd3, 0x56, 0xc2, 0x30, 0x81, 0x65, 0x7a, 0x18, 0xfd,
	0x24, 0x70, 0x71, 0x69, 0x54, 0xc3, 0xf5, 0x52, 0xfc, 0xd8, 0x62, 0xa3, 0xd9, 0x73, 0x70, 0x3f,
	0x60, 0x26, 0xb0, 0x36, 0x87, 0x0c, 0x92, 0x27, 0xd3, 0xb3, 0xf5, 0xa2, 0xd7, 0x46, 0x90, 0xf6,
	0xc2, 0x7b, 0x7a, 0xe7, 0xe8, 0x2b, 0x85, 0xf3, 0xb7, 0xd9, 0xa7, 0xbf, 0x91, 0xd0, 0x36, 0x8b,
	0x1e, 0x35, 0x6b, 0xf1, 0x9b, 0x89, 0x97, 0x27, 0x13, 0x3b, 0x33, 0x89, 0xdd, 0xd9, 0xc4, 0xab,
	0xd9, 0x66, 0x79, 0xa7, 0x9a, 0xe5, 0x4f, 0x9b, 0x15, 0x7d, 0x27, 0x70, 0xfe, 0x0a, 0xf5, 0x70,
	0xa2, 0xe6, 0x0f, 0x6e, 0x74, 0x08, 0x4b, 0x4f, 0x86, 0x5d, 0xcc, 0x84, 0x5d, 0xce, 0x86, 0x75,
	0x8e, 0x7f, 0xde, 0x2f, 0xb0, 0xbe, 0xed, 0xbc, 0xa9, 0x94, 0x6c, 0x90, 0x25, 0x77, 0xac, 0x6f,
	0x6e, 0x5b, 0xb7, 0xaa, 0x3b, 0xde, 0x13, 0xfb, 0x81, 0x99, 0x45, 0x9c, 0x86, 0x8b, 0x38, 0x48,
	0xd6, 0xd3, 0xb1, 0x43, 0x85, 0x46, 0x59, 0xf4, 0x83, 0xc0, 0xc5, 0x4b, 0x2c, 0x51, 0xff, 0x8b,
	0x82, 0xfd, 0xe7, 0x6f, 0xe5, 0xfa, 0xc1, 0x35, 0xb9, 0x71, 0xcd, 0x5f, 0xea, 0x8b, 0x5f, 0x01,
	0x00, 0x00, 0xff, 0xff, 0x24, 0xc5, 0x0b, 0xbc, 0x8b, 0x05, 0x00, 0x00,
}
