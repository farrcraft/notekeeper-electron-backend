// Code generated by protoc-gen-go.
// source: tag.proto
// DO NOT EDIT!

package notekeeper

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Ignoring public import of Title from title.proto

type Tag struct {
	Id      string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name    *Title `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Created string `protobuf:"bytes,3,opt,name=created" json:"created,omitempty"`
	Updated string `protobuf:"bytes,4,opt,name=updated" json:"updated,omitempty"`
}

func (m *Tag) Reset()                    { *m = Tag{} }
func (m *Tag) String() string            { return proto.CompactTextString(m) }
func (*Tag) ProtoMessage()               {}
func (*Tag) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{0} }

func (m *Tag) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Tag) GetName() *Title {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *Tag) GetCreated() string {
	if m != nil {
		return m.Created
	}
	return ""
}

func (m *Tag) GetUpdated() string {
	if m != nil {
		return m.Updated
	}
	return ""
}

type GetTagsRequest struct {
	Header *RequestHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Scope  string         `protobuf:"bytes,2,opt,name=scope" json:"scope,omitempty"`
}

func (m *GetTagsRequest) Reset()                    { *m = GetTagsRequest{} }
func (m *GetTagsRequest) String() string            { return proto.CompactTextString(m) }
func (*GetTagsRequest) ProtoMessage()               {}
func (*GetTagsRequest) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{1} }

func (m *GetTagsRequest) GetHeader() *RequestHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *GetTagsRequest) GetScope() string {
	if m != nil {
		return m.Scope
	}
	return ""
}

type GetTagsResponse struct {
	Header *ResponseHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Tags   []*Tag          `protobuf:"bytes,2,rep,name=tags" json:"tags,omitempty"`
}

func (m *GetTagsResponse) Reset()                    { *m = GetTagsResponse{} }
func (m *GetTagsResponse) String() string            { return proto.CompactTextString(m) }
func (*GetTagsResponse) ProtoMessage()               {}
func (*GetTagsResponse) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{2} }

func (m *GetTagsResponse) GetHeader() *ResponseHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *GetTagsResponse) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

type CreateTagRequest struct {
	Header *RequestHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Name   *Title         `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Scope  string         `protobuf:"bytes,3,opt,name=scope" json:"scope,omitempty"`
}

func (m *CreateTagRequest) Reset()                    { *m = CreateTagRequest{} }
func (m *CreateTagRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateTagRequest) ProtoMessage()               {}
func (*CreateTagRequest) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{3} }

func (m *CreateTagRequest) GetHeader() *RequestHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *CreateTagRequest) GetName() *Title {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *CreateTagRequest) GetScope() string {
	if m != nil {
		return m.Scope
	}
	return ""
}

type SaveTagRequest struct {
	Header *RequestHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Id     string         `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	Scope  string         `protobuf:"bytes,3,opt,name=scope" json:"scope,omitempty"`
	Name   *Title         `protobuf:"bytes,4,opt,name=name" json:"name,omitempty"`
}

func (m *SaveTagRequest) Reset()                    { *m = SaveTagRequest{} }
func (m *SaveTagRequest) String() string            { return proto.CompactTextString(m) }
func (*SaveTagRequest) ProtoMessage()               {}
func (*SaveTagRequest) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{4} }

func (m *SaveTagRequest) GetHeader() *RequestHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *SaveTagRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *SaveTagRequest) GetScope() string {
	if m != nil {
		return m.Scope
	}
	return ""
}

func (m *SaveTagRequest) GetName() *Title {
	if m != nil {
		return m.Name
	}
	return nil
}

type DeleteTagRequest struct {
	Header *RequestHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Id     string         `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	Scope  string         `protobuf:"bytes,3,opt,name=scope" json:"scope,omitempty"`
}

func (m *DeleteTagRequest) Reset()                    { *m = DeleteTagRequest{} }
func (m *DeleteTagRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteTagRequest) ProtoMessage()               {}
func (*DeleteTagRequest) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{5} }

func (m *DeleteTagRequest) GetHeader() *RequestHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *DeleteTagRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *DeleteTagRequest) GetScope() string {
	if m != nil {
		return m.Scope
	}
	return ""
}

func init() {
	proto.RegisterType((*Tag)(nil), "notekeeper.Tag")
	proto.RegisterType((*GetTagsRequest)(nil), "notekeeper.GetTagsRequest")
	proto.RegisterType((*GetTagsResponse)(nil), "notekeeper.GetTagsResponse")
	proto.RegisterType((*CreateTagRequest)(nil), "notekeeper.CreateTagRequest")
	proto.RegisterType((*SaveTagRequest)(nil), "notekeeper.SaveTagRequest")
	proto.RegisterType((*DeleteTagRequest)(nil), "notekeeper.DeleteTagRequest")
}

func init() { proto.RegisterFile("tag.proto", fileDescriptor9) }

var fileDescriptor9 = []byte{
	// 291 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x52, 0xcd, 0x4e, 0x83, 0x40,
	0x10, 0x96, 0x1f, 0x6b, 0x18, 0x12, 0x5a, 0x37, 0x1e, 0xb0, 0x27, 0x82, 0x31, 0xe1, 0x44, 0x22,
	0x3e, 0x82, 0x26, 0x7a, 0x34, 0x2b, 0x17, 0x8f, 0x6b, 0x99, 0x20, 0xb6, 0xb2, 0x2b, 0x3b, 0xf5,
	0x01, 0x7c, 0x02, 0x1f, 0xd9, 0xb0, 0x8b, 0xd8, 0x36, 0xc6, 0x18, 0x4d, 0x3c, 0x0e, 0xdf, 0xcf,
	0x7c, 0x1f, 0xb3, 0x10, 0x90, 0xa8, 0x73, 0xd5, 0x49, 0x92, 0x0c, 0x5a, 0x49, 0xb8, 0x44, 0x54,
	0xd8, 0xcd, 0x43, 0x6a, 0x68, 0x85, 0x16, 0x48, 0x15, 0x78, 0xa5, 0xa8, 0x59, 0x04, 0x6e, 0x53,
	0xc5, 0x4e, 0xe2, 0x64, 0x01, 0x77, 0x9b, 0x8a, 0x9d, 0x82, 0xdf, 0x8a, 0x27, 0x8c, 0xdd, 0xc4,
	0xc9, 0xc2, 0xe2, 0x30, 0xff, 0x94, 0xe7, 0x65, 0xaf, 0xe6, 0x06, 0x66, 0x31, 0x1c, 0x2c, 0x3a,
	0x14, 0x84, 0x55, 0xec, 0x19, 0xed, 0xc7, 0xd8, 0x23, 0x6b, 0x55, 0x19, 0xc4, 0xb7, 0xc8, 0x30,
	0xa6, 0x77, 0x10, 0x5d, 0x21, 0x95, 0xa2, 0xd6, 0x1c, 0x9f, 0xd7, 0xa8, 0x89, 0x9d, 0xc1, 0xe4,
	0x01, 0x45, 0x85, 0x9d, 0x09, 0x10, 0x16, 0xc7, 0x9b, 0xeb, 0x06, 0xd2, 0xb5, 0x21, 0xf0, 0x81,
	0xc8, 0x8e, 0x60, 0x5f, 0x2f, 0xa4, 0xb2, 0x01, 0x03, 0x6e, 0x87, 0xf4, 0x11, 0xa6, 0xa3, 0xb5,
	0x56, 0xb2, 0xd5, 0xc8, 0x8a, 0x1d, 0xef, 0xf9, 0xb6, 0xb7, 0x65, 0xed, 0x98, 0x9f, 0x80, 0x4f,
	0xa2, 0xd6, 0xb1, 0x9b, 0x78, 0x59, 0x58, 0x4c, 0xb7, 0xca, 0x8b, 0x9a, 0x1b, 0x30, 0x7d, 0x75,
	0x60, 0x76, 0x61, 0xca, 0xf6, 0xdf, 0x7e, 0xdf, 0xe4, 0x87, 0x7f, 0x7a, 0x2c, 0xec, 0x6d, 0x16,
	0x7e, 0x73, 0x20, 0xba, 0x15, 0x2f, 0x7f, 0x8c, 0x60, 0x8f, 0xef, 0x8e, 0xc7, 0xff, 0x72, 0xd7,
	0x18, 0xd4, 0xff, 0x36, 0x68, 0xba, 0x84, 0xd9, 0x25, 0xae, 0x90, 0xfe, 0x23, 0xd3, 0xcd, 0xde,
	0xfd, 0xc4, 0x3c, 0xe3, 0xf3, 0xf7, 0x00, 0x00, 0x00, 0xff, 0xff, 0xe5, 0x6b, 0x45, 0x78, 0xec,
	0x02, 0x00, 0x00,
}
