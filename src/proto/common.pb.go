// Code generated by protoc-gen-go.
// source: common.proto
// DO NOT EDIT!

package notekeeper

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// All requests will include this embedded message type
type RequestHeader struct {
	Method    string `protobuf:"bytes,1,opt,name=method" json:"method,omitempty"`
	Signature []byte `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	Sequence  int32  `protobuf:"varint,3,opt,name=sequence" json:"sequence,omitempty"`
}

func (m *RequestHeader) Reset()                    { *m = RequestHeader{} }
func (m *RequestHeader) String() string            { return proto.CompactTextString(m) }
func (*RequestHeader) ProtoMessage()               {}
func (*RequestHeader) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *RequestHeader) GetMethod() string {
	if m != nil {
		return m.Method
	}
	return ""
}

func (m *RequestHeader) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

func (m *RequestHeader) GetSequence() int32 {
	if m != nil {
		return m.Sequence
	}
	return 0
}

// All responses will include this embedded message type
type ResponseHeader struct {
	Status string `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	Code   int32  `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Scope  int32  `protobuf:"varint,3,opt,name=scope" json:"scope,omitempty"`
}

func (m *ResponseHeader) Reset()                    { *m = ResponseHeader{} }
func (m *ResponseHeader) String() string            { return proto.CompactTextString(m) }
func (*ResponseHeader) ProtoMessage()               {}
func (*ResponseHeader) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{1} }

func (m *ResponseHeader) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *ResponseHeader) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ResponseHeader) GetScope() int32 {
	if m != nil {
		return m.Scope
	}
	return 0
}

func init() {
	proto.RegisterType((*RequestHeader)(nil), "notekeeper.RequestHeader")
	proto.RegisterType((*ResponseHeader)(nil), "notekeeper.ResponseHeader")
}

func init() { proto.RegisterFile("common.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 171 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x44, 0x8f, 0x31, 0xce, 0x82, 0x40,
	0x10, 0x46, 0xb3, 0xff, 0x2f, 0x44, 0x26, 0x68, 0xb1, 0x31, 0x86, 0x18, 0x0b, 0x42, 0x45, 0x65,
	0xe3, 0x25, 0xac, 0xe7, 0x06, 0xeb, 0x32, 0x51, 0x63, 0xd8, 0x59, 0x77, 0x86, 0xfb, 0x1b, 0x41,
	0xa4, 0x9b, 0x37, 0xc5, 0x7b, 0xf9, 0xa0, 0xf4, 0xdc, 0xf7, 0x1c, 0x4e, 0x31, 0xb1, 0xb2, 0x85,
	0xc0, 0x4a, 0x4f, 0xa2, 0x48, 0xa9, 0x71, 0xb0, 0x41, 0x7a, 0x0d, 0x24, 0x7a, 0x21, 0xd7, 0x51,
	0xb2, 0x7b, 0xc8, 0x7b, 0xd2, 0x3b, 0x77, 0x95, 0xa9, 0x4d, 0x5b, 0xe0, 0x97, 0xec, 0x11, 0x0a,
	0x79, 0xdc, 0x82, 0xd3, 0x21, 0x51, 0xf5, 0x57, 0x9b, 0xb6, 0xc4, 0xe5, 0x61, 0x0f, 0xb0, 0x96,
	0x8f, 0x26, 0x78, 0xaa, 0xfe, 0x6b, 0xd3, 0x66, 0xf8, 0xe3, 0x06, 0x61, 0x8b, 0x24, 0x91, 0x83,
	0xd0, 0xd2, 0x10, 0x75, 0x3a, 0xc8, 0xdc, 0x98, 0xc8, 0x5a, 0x58, 0x79, 0xee, 0x26, 0x7d, 0x86,
	0xe3, 0x6d, 0x77, 0x90, 0x89, 0xe7, 0x38, 0x6b, 0x27, 0xb8, 0xe6, 0xe3, 0x92, 0xf3, 0x3b, 0x00,
	0x00, 0xff, 0xff, 0x71, 0xee, 0x87, 0x7b, 0xd9, 0x00, 0x00, 0x00,
}
